<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>Hello World</title>
      <link href="/2022/0330undefined.html"/>
      <url>/2022/0330undefined.html</url>
      
        <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">$ hexo new &quot;My New Post&quot;<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">$ hexo server<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">$ hexo generate<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">$ hexo deploy<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>数组讲解</title>
      <link href="/2022/0301undefined.html"/>
      <url>/2022/0301undefined.html</url>
      
        <content type="html"><![CDATA[<h3 id="数组理论基础"><a href="#数组理论基础" class="headerlink" title="数组理论基础"></a>数组理论基础</h3><p>​    想必学过数据结构的同学都知道数组了，接下来就带大家了解一下。</p><h3 id="1-数组的存储方式"><a href="#1-数组的存储方式" class="headerlink" title="1 数组的存储方式"></a>1 数组的存储方式</h3><p>​    数组是通过下标索引获取的方式到下标下对应的数据，数组是存放在内存空间的，每一个数都对应的一个相对地址。我在这里不过多的赘述了，具体的大家去查资料。</p><h3 id="2-注意两点"><a href="#2-注意两点" class="headerlink" title="2 注意两点"></a>2 注意两点</h3><p>   · 数组下标都是从0开始的<br>   · 数组内存空间的地址都是连续的</p><p>首先从leetcode的第一题开始说起两数之和，这一题有多种解法，我从暴力破解和HashMap两种开始讲解。</p><p><a href="https://leetcode-cn.com/problems/two-sum/">两数之和</a></p><p>第一种双重for循环也为暴力破解</p><p>​    如果使用暴力破解不会 大家就想想学的<a href="https://www.baidu.com/s?ie=UTF-8&wd=%E5%86%92%E6%B3%A1%E7%AE%97%E6%B3%95">冒泡算法</a>  是不是使用双指针先确定一个依次循环然后遍历并且相加得到值进行比较。</p><p>注意返回的格式 ” new int[] {i,j} “ </p><p>第二中方法 哈希表</p><p>​    如果对哈希表了解不是很全面，到<a href="https://turingplanet.org/2020/03/08/%e5%93%88%e5%b8%8c%e8%a1%a8-hash-table%e3%80%8c%e6%95%b0%e6%8d%ae%e7%bb%93%e6%9e%84%e5%92%8c%e7%ae%97%e6%b3%956%e3%80%8d/#ha_xi_biao_de_gai_nian">哈希表</a>来了解，总之算法不是一天修成，大家持之以恒终有一天会成为算法大佬（我也是菜鸟）</p><p>整个for循环我相信大家可以理解 但是对于 <a href="https://www.runoob.com/java/java-hashmap-containskey.html">“ map.containsKey(target - nums[i]) ”</a> 肯定理解不是很到位，可以到菜鸟教程了解，也可以点击我给的超链接， 注意返回的格式 ” new int[] {i,j} “ 。</p><pre class="line-numbers language-none"><code class="language-none">hashmap.containsKey(Object key)<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p> 如果 hashMap 中存在指定的 key 对应的映射关系返回 true，否则返回 false。</p><pre class="line-numbers language-java" data-language="java"><code class="language-java">public int[] twoSum(int[] nums, int target) &#123;            第一种解法         int let &#x3D; nums.length;         for(int i &#x3D; 0;i &lt; let;i++)&#123;             for(int j &#x3D; i + 1; j &lt; let; ++j)&#123;                 if(nums[i]+nums[j] &#x3D;&#x3D; target)&#123;                     return new int[] &#123;i,j&#125;;                     &#x2F;&#x2F;注意返回的形式 我第一踩的坑就是不会返回 new的数组。                 &#125;             &#125;         &#125;第二种解法        Map&lt;Integer, Integer&gt; map &#x3D; new HashMap&lt;&gt;();        for(int i &#x3D; 0;i&lt;nums.length;i++)&#123;             &#x2F;&#x2F; 如果 hashMap 中存在指定的 key 对应的映射关系返回 true，否则返回 false。            if(map.containsKey(target - nums[i]))&#123;                return new int[]&#123;map.get(target - nums[i]),i&#125;;            &#125;            map.put(nums[i],i);        &#125;                return new int[2];    &#125;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>忠告大家：</p><p>​    · 练习算法千万不能直接复制粘贴，哪怕不会做没有思路，也千万不用复制粘贴。实在不跟着思路抄一遍，只会有益无害。</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>本站说明</title>
      <link href="/2022/0301undefined.html"/>
      <url>/2022/0301undefined.html</url>
      
        <content type="html"><![CDATA[<pre><code>本站只用于学习参考，如有错误请即使指出，大家一起进步一起成长。</code></pre>]]></content>
      
      
      
    </entry>
    
    
  
  
</search>
